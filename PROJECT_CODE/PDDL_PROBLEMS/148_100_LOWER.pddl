; Problem description
; This file describes the example input from the problem statement
(define (problem pb1)
  (:metric minimize (total-cost))
  (:domain CS170)
(:objects TA_XB TA_XD TA_XE TA_XF TA_XH TA_XI TA_XJ XA XB XC XD XE XF XG XH XI XJ )
(:init(= (total-cost) 0)
( Car_At XA )
(InCar TA_XB)
(InCar TA_XD)
(InCar TA_XE)
(InCar TA_XF)
(InCar TA_XH)
(InCar TA_XI)
(InCar TA_XJ)
(Path XA XC )
(Path XC XA )
(= (Distance XA XC )1)
(= (Distance XC XA )1)

(Path XA XF )
(Path XF XA )
(= (Distance XA XF )1)
(= (Distance XF XA )1)

(Path XB XE )
(Path XE XB )
(= (Distance XB XE )1)
(= (Distance XE XB )1)

(Path XB XH )
(Path XH XB )
(= (Distance XB XH )1)
(= (Distance XH XB )1)

(Path XB XJ )
(Path XJ XB )
(= (Distance XB XJ )1)
(= (Distance XJ XB )1)

(Path XC XD )
(Path XD XC )
(= (Distance XC XD )4)
(= (Distance XD XC )4)

(Path XC XF )
(Path XF XC )
(= (Distance XC XF )1)
(= (Distance XF XC )1)

(Path XD XE )
(Path XE XD )
(= (Distance XD XE )1)
(= (Distance XE XD )1)

(Path XD XH )
(Path XH XD )
(= (Distance XD XH )1)
(= (Distance XH XD )1)

(Path XD XI )
(Path XI XD )
(= (Distance XD XI )1)
(= (Distance XI XD )1)

(Path XE XH )
(Path XH XE )
(= (Distance XE XH )1)
(= (Distance XH XE )1)

(Path XF XG )
(Path XG XF )
(= (Distance XF XG )3)
(= (Distance XG XF )3)

(Path XF XI )
(Path XI XF )
(= (Distance XF XI )2)
(= (Distance XI XF )2)

(Path XG XH )
(Path XH XG )
(= (Distance XG XH )1)
(= (Distance XH XG )1)

(Path XG XI )
(Path XI XG )
(= (Distance XG XI )1)
(= (Distance XI XG )1)

(EmptyHome XB)
(EmptyHome XD)
(EmptyHome XE)
(EmptyHome XF)
(EmptyHome XH)
(EmptyHome XI)
(EmptyHome XJ)
)

  ; The goal state describe what we desire to achieve
  (:goal (and
( Car_At XA )
(not (EmptyHome XB))
(not (EmptyHome XD))
(not (EmptyHome XE))
(not (EmptyHome XF))
(not (EmptyHome XH))
(not (EmptyHome XI))
(not (EmptyHome XJ))
  ))
)